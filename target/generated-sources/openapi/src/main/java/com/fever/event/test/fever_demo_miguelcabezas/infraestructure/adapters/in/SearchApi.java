/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.fever.event.test.fever_demo_miguelcabezas.infraestructure.adapters.in;

import org.springframework.format.annotation.DateTimeFormat;
import com.fever.event.test.fever_demo_miguelcabezas.application.dto.EventList;
import java.time.LocalDate;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-03-22T12:56:50.571266200+01:00[Europe/Madrid]")
@Validated
@Tag(name = "search", description = "the search API")
public interface SearchApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /search : List events avalailable within a time period
     *
     * @param startsAt  (required)
     * @param endsAt  (required)
     * @return Available events list (status code 200)
     */
    @Operation(
        operationId = "searchEvents",
        summary = "List events avalailable within a time period",
        responses = {
            @ApiResponse(responseCode = "200", description = "Available events list", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = EventList.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/search",
        produces = { "application/json" }
    )
    
    default ResponseEntity<EventList> _searchEvents(
        @NotNull @Parameter(name = "starts_at", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "starts_at", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate startsAt,
        @NotNull @Parameter(name = "ends_at", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "ends_at", required = true) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate endsAt
    ) {
        return searchEvents(startsAt, endsAt);
    }

    // Override this method
    default  ResponseEntity<EventList> searchEvents(LocalDate startsAt, LocalDate endsAt) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"events\" : [ { \"end_date\" : \"2000-01-23\", \"start_time\" : \"22:38:19\", \"max_price\" : 6.027456183070403, \"min_price\" : 0.8008281904610115, \"end_time\" : \"14:45:15\", \"id\" : \"id\", \"title\" : \"title\", \"start_date\" : \"2000-01-23\" }, { \"end_date\" : \"2000-01-23\", \"start_time\" : \"22:38:19\", \"max_price\" : 6.027456183070403, \"min_price\" : 0.8008281904610115, \"end_time\" : \"14:45:15\", \"id\" : \"id\", \"title\" : \"title\", \"start_date\" : \"2000-01-23\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
